{"version":3,"sources":["utils/constants.js","components/App.js","components/Header.js","components/Video.js","components/Forum.js","components/Home.js","components/FileList.js","router/AppRouter.js","index.js"],"names":["API_URL","App","props","useState","file","setFile","previewSrc","setPreviewSrc","errorMsg","setErrorMsg","isPreviewAvailable","setIsPreviewAvailable","dropRef","useRef","updateBorder","dragState","current","style","border","handleOnSubmit","event","a","preventDefault","formData","FormData","append","axios","post","headers","history","push","response","data","Fragment","Form","className","onSubmit","Row","Col","onDrop","files","uploadedFile","fileReader","FileReader","onload","result","readAsDataURL","name","match","onDragEnter","onDragLeave","getRootProps","getInputProps","ref","src","alt","Button","variant","type","Header","activeClassName","to","exact","Video","Forum","Home","FilesList","filesList","setFilesList","useEffect","get","getFilesList","downloadFile","id","path","mimetype","responseType","split","filename","length","download","status","map","_id","file_path","file_mimetype","href","onClick","colSpan","fontWeight","AppRouter","component","ListFile","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ce0522e.chunk.js","sourcesContent":["export const API_URL = 'http://localhost:5000'; //URL of backend","import React, { useState, useRef } from 'react';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\nimport { API_URL } from '../utils/constants';\n\nconst App = (props) => {\n  const [file, setFile] = useState(null); // state for storing actual image\n  const [previewSrc, setPreviewSrc] = useState(''); // state for storing previewImage\n  const [errorMsg, setErrorMsg] = useState('');\n  const [isPreviewAvailable, setIsPreviewAvailable] = useState(false); // state to show preview only for images\n  const dropRef = useRef(); // React ref for managing the hover state of droppable area\n\n  const onDrop = (files) => {\n    const [uploadedFile] = files;\n    setFile(uploadedFile);\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewSrc(fileReader.result);\n    };\n    fileReader.readAsDataURL(uploadedFile);\n    setIsPreviewAvailable(uploadedFile.name.match(/\\.(jpeg|jpg|png)$/));\n    dropRef.current.style.border = '2px dashed #e9ebeb';\n  };\n\n  const updateBorder = (dragState) => {\n    if (dragState === 'over') {\n      dropRef.current.style.border = '2px solid #000';\n    } else if (dragState === 'leave') {\n      dropRef.current.style.border = '2px dashed #e9ebeb';\n    }\n  };\n\n  const handleOnSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      setErrorMsg('');\n      await axios.post(`${API_URL}/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data' \n        }\n      });\n      props.history.push('/list');\n    } else {\n      setErrorMsg(\"S'il vous plaît, ajoutez votre image\");\n    }\n    } catch (error) {\n      error.response && setErrorMsg(error.response.data);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Form className=\"search-form\" onSubmit={handleOnSubmit}>\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\n        <Row>\n          <Col>\n            Placez votre image ci-dessous !\n          </Col>\n        </Row>\n        <div className=\"upload-section\">\n          <Dropzone \n          onDrop={onDrop}\n          onDragEnter={() => updateBorder('over')}\n          onDragLeave={() => updateBorder('leave')}\n          >\n            {({ getRootProps, getInputProps }) => (\n            <div {...getRootProps({ className: 'drop-zone' })} ref={dropRef}>\n              <input {...getInputProps()} />\n              <p>Glissez votre image ici ou cliquez ici pour la sélectionner</p>\n              {file && (\n              <div>\n                <strong>Image sélectionnée:</strong> {file.name}\n              </div>\n              )}\n            </div>\n            )}\n          </Dropzone>\n          {previewSrc ? (\n          isPreviewAvailable ? (\n          <div className=\"image-preview\">\n            <img className=\"preview-image\" src={previewSrc} alt=\"Preview\" />\n          </div>\n    ) : (\n      <div className=\"preview-message\">\n        <p>L'aperçu de votre image est indisponible</p>\n      </div>\n    )\n  ) : (\n  <div className=\"preview-message\">\n    <p>L'aperçu de votre image s'affichera ici après votre sélection</p>\n  </div>\n  )}\n  </div>\n        <Button variant=\"primary\" type=\"submit\">\n          Envoyer\n        </Button>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nexport default App;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <h1>Focus +</h1>\n      <nav>\n        <NavLink activeClassName=\"active\" to=\"/\" exact={true}>\n          Accueil\n        </NavLink>\n        <NavLink activeClassName=\"active\" to=\"/focus+\">\n          Focus+\n        </NavLink>\n        <NavLink activeClassName=\"active\" to=\"/video\">\n          Video tuto\n        </NavLink>\n        <NavLink activeClassName=\"active\" to=\"/forum\">\n          Forum\n        </NavLink>\n      </nav>\n    </div>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nconst Video = () => {\n\nreturn (\n    <React.Fragment>\n        <Row>\n          <Col>\n            Bienvenue sur la partie vidéo\n          </Col>\n        </Row>\n    </React.Fragment>\n    );\n};\n\nexport default Video;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nconst Forum = () => {\n\nreturn (\n    <React.Fragment>\n        <Row>\n          <Col>\n            Bienvenue sur la partie Forum\n          </Col>\n        </Row>\n    </React.Fragment>\n    );\n};\n\nexport default Forum;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nconst Home = () => {\n\nreturn (\n    <React.Fragment>\n        <Row>\n          <Col>\n            Bienvenue sur Focus +\n          </Col>\n        </Row>\n    </React.Fragment>\n    );\n};\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport download from 'downloadjs';\nimport axios from 'axios';\nimport { API_URL } from '../utils/constants';\n\nconst FilesList = () => {\n    const [filesList, setFilesList] = useState([]);\n    const [errorMsg, setErrorMsg] = useState('');\n\n    useEffect(() => {\n      const getFilesList = async () => {\n        try {\n          const { data } = await axios.get(`${API_URL}/getAllFiles`);\n          setErrorMsg('');\n          setFilesList(data);\n        } catch (error) {\n          error.response && setErrorMsg(error.response.data);\n        }\n      };\n\n      getFilesList();\n    }, []);\n\n    const downloadFile = async (id, path, mimetype) => {\n      try {\n        const result = await axios.get(`${API_URL}/download/${id}`, {\n          responseType: 'blob'\n        });\n        const split = path.split('/');\n        const filename = split[split.length - 1];\n        setErrorMsg('');\n        return download(result.data, filename, mimetype);\n      } catch (error) {\n        if (error.response && error.response.status === 400) {\n          setErrorMsg('Erreur pendant le téléchargement. Réessayer plus tard.');\n        }\n      }\n    };\n    \n    return (\n      <div className=\"files-container\">\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\n        <table className=\"files-table\">\n          <thead>\n            <tr>\n              <th>Vos images sont disponibles</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filesList.length > 0 ? (\n              filesList.map(\n                ({ _id, file_path, file_mimetype }) => (\n                  <tr key={_id}>\n                    <td>\n                      <a\n                        href=\"#/\"\n                        onClick={() =>\n                          downloadFile(_id, file_path, file_mimetype)\n                        }\n                      >\n                        Télécharger\n                      </a>\n                    </td>\n                  </tr>\n                )\n              )\n            ) : (\n              <tr>\n                <td colSpan={3} style={{ fontWeight: '300' }}>\n                  Pas d'image générée trouvée.\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  export default FilesList;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport App from '../components/App';\nimport Header from '../components/Header';\nimport Video from '../components/Video';\nimport Forum from '../components/Forum';\nimport Home from '../components/Home';\nimport ListFile from '../components/FileList';\n\nconst AppRouter = () => (\n  <BrowserRouter>\n    <div className=\"container\">\n      <Header />\n      <div className=\"main-content\">\n        <Switch>\n          <Route component={Home} path=\"/\" exact={true} />\n          <Route component={App} path=\"/focus+\" exact={true} />\n          <Route component={Video} path=\"/video\" exact={true} />\n          <Route component={Forum} path=\"/forum\" exact={true} />\n          <Route component={ListFile} path=\"/list\" exact={true} />\n        </Switch>\n      </div>\n    </div>\n  </BrowserRouter>\n);\n\nexport default AppRouter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './router/AppRouter';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.scss';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));"],"sourceRoot":""}