{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/qtreheux/Desktop/test-bootstrap/src/components/FileList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport download from 'downloadjs';\nimport axios from 'axios';\nimport { API_URL } from '../utils/constants';\n\nconst FilesList = () => {\n  _s();\n\n  const [filesList, setFilesList] = useState([]);\n  const [errorMsg, setErrorMsg] = useState('');\n  useEffect(() => {\n    const getFilesList = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`${API_URL}/getAllFiles`);\n        setErrorMsg('');\n        setFilesList(data);\n      } catch (error) {\n        error.response && setErrorMsg(error.response.data);\n      }\n    };\n\n    getFilesList();\n  }, []);\n\n  const downloadFile = async (id, path, mimetype) => {\n    try {\n      const result = await axios.get(`${API_URL}/download/${id}`, {\n        responseType: 'blob'\n      });\n      const split = path.split('/');\n      const filename = split[split.length - 1];\n      setErrorMsg('');\n      return download(result.data, filename, mimetype);\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        setErrorMsg('Erreur pendant le téléchargement. Réessayer plus tard.');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"files-container\",\n    children: [errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errorMsg\",\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"files-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"T\\xE9l\\xE9charger vos images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filesList.length > 0 ? filesList.map(({\n          _id,\n          file_path,\n          file_mimetype\n        }) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#/\",\n              onClick: () => downloadFile(_id, file_path, file_mimetype),\n              children: \"T\\xE9l\\xE9charger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)\n        }, _id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: 3,\n            style: {\n              fontWeight: '300'\n            },\n            children: \"Pas d'image g\\xE9n\\xE9r\\xE9e trouv\\xE9e.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n\n_s(FilesList, \"VDDeh7KTRRtLyX3w+VxpSox5D8c=\");\n\n_c = FilesList;\nexport default FilesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilesList\");","map":{"version":3,"sources":["/home/qtreheux/Desktop/test-bootstrap/src/components/FileList.js"],"names":["React","useState","useEffect","download","axios","API_URL","FilesList","filesList","setFilesList","errorMsg","setErrorMsg","getFilesList","data","get","error","response","downloadFile","id","path","mimetype","result","responseType","split","filename","length","status","map","_id","file_path","file_mimetype","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport download from 'downloadjs';\nimport axios from 'axios';\nimport { API_URL } from '../utils/constants';\n\nconst FilesList = () => {\n    const [filesList, setFilesList] = useState([]);\n    const [errorMsg, setErrorMsg] = useState('');\n\n    useEffect(() => {\n      const getFilesList = async () => {\n        try {\n          const { data } = await axios.get(`${API_URL}/getAllFiles`);\n          setErrorMsg('');\n          setFilesList(data);\n        } catch (error) {\n          error.response && setErrorMsg(error.response.data);\n        }\n      };\n\n      getFilesList();\n    }, []);\n\n    const downloadFile = async (id, path, mimetype) => {\n      try {\n        const result = await axios.get(`${API_URL}/download/${id}`, {\n          responseType: 'blob'\n        });\n        const split = path.split('/');\n        const filename = split[split.length - 1];\n        setErrorMsg('');\n        return download(result.data, filename, mimetype);\n      } catch (error) {\n        if (error.response && error.response.status === 400) {\n          setErrorMsg('Erreur pendant le téléchargement. Réessayer plus tard.');\n        }\n      }\n    };\n    \n    return (\n      <div className=\"files-container\">\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\n        <table className=\"files-table\">\n          <thead>\n            <tr>\n              <th>Télécharger vos images</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filesList.length > 0 ? (\n              filesList.map(\n                ({ _id, file_path, file_mimetype }) => (\n                  <tr key={_id}>\n                    <td>\n                      <a\n                        href=\"#/\"\n                        onClick={() =>\n                          downloadFile(_id, file_path, file_mimetype)\n                        }\n                      >\n                        Télécharger\n                      </a>\n                    </td>\n                  </tr>\n                )\n              )\n            ) : (\n              <tr>\n                <td colSpan={3} style={{ fontWeight: '300' }}>\n                  Pas d'image générée trouvée.\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  export default FilesList;"]},"metadata":{},"sourceType":"module"}