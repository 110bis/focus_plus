{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/qtreheux/Desktop/test-bootstrap/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\nimport { API_URL } from '../utils/constants';\n\nconst App = props => {\n  _s();\n\n  const [file, setFile] = useState(null); // state for storing actual image\n\n  const [previewSrc, setPreviewSrc] = useState(''); // state for storing previewImage\n\n  const [errorMsg, setErrorMsg] = useState('');\n  const [isPreviewAvailable, setIsPreviewAvailable] = useState(false); // state to show preview only for images\n\n  const dropRef = useRef(); // React ref for managing the hover state of droppable area\n\n  const onDrop = files => {\n    const [uploadedFile] = files;\n    setFile(uploadedFile);\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      setPreviewSrc(fileReader.result);\n    };\n\n    fileReader.readAsDataURL(uploadedFile);\n    setIsPreviewAvailable(uploadedFile.name.match(/\\.(jpeg|jpg|png)$/));\n    dropRef.current.style.border = '2px dashed #e9ebeb';\n  };\n\n  const updateBorder = dragState => {\n    if (dragState === 'over') {\n      dropRef.current.style.border = '2px solid #000';\n    } else if (dragState === 'leave') {\n      dropRef.current.style.border = '2px dashed #e9ebeb';\n    }\n  };\n\n  const handleOnSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      if (file) {\n        const formData = new FormData();\n        formData.append('file', file);\n        setErrorMsg('');\n        await axios.post(`${API_URL}/upload`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        props.history.push('/list');\n      } else {\n        setErrorMsg(\"S'il vous plaÃ®t, ajoutez votre image\");\n      }\n    } catch (error) {\n      error.response && setErrorMsg(error.response.data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"search-form\",\n      onSubmit: handleOnSubmit,\n      children: [errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMsg\",\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: \"Placez votre image ci-dessous !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n          onDrop: onDrop,\n          onDragEnter: () => updateBorder('over'),\n          onDragLeave: () => updateBorder('leave'),\n          children: ({\n            getRootProps,\n            getInputProps\n          }) => /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n              className: 'drop-zone'\n            }),\n            ref: dropRef,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Glissez votre image ici ou cliquez ici pour la s\\xE9lectionner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Image s\\xE9lectionn\\xE9e:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), \" \", file.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), previewSrc ? isPreviewAvailable ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-preview\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"preview-image\",\n            src: previewSrc,\n            alt: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"L'aper\\xE7u de votre image est indisponible\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"L'aper\\xE7u de votre image s'affichera ici apr\\xE8s votre s\\xE9lection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"EKoqY05Sr7NFYOsnE0u0nlA5D18=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/qtreheux/Desktop/test-bootstrap/src/components/App.js"],"names":["React","useState","useRef","Form","Row","Col","Button","Dropzone","axios","API_URL","App","props","file","setFile","previewSrc","setPreviewSrc","errorMsg","setErrorMsg","isPreviewAvailable","setIsPreviewAvailable","dropRef","onDrop","files","uploadedFile","fileReader","FileReader","onload","result","readAsDataURL","name","match","current","style","border","updateBorder","dragState","handleOnSubmit","event","preventDefault","formData","FormData","append","post","headers","history","push","error","response","data","getRootProps","getInputProps","className"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\nimport { API_URL } from '../utils/constants';\n\nconst App = (props) => {\n  const [file, setFile] = useState(null); // state for storing actual image\n  const [previewSrc, setPreviewSrc] = useState(''); // state for storing previewImage\n  const [errorMsg, setErrorMsg] = useState('');\n  const [isPreviewAvailable, setIsPreviewAvailable] = useState(false); // state to show preview only for images\n  const dropRef = useRef(); // React ref for managing the hover state of droppable area\n\n  const onDrop = (files) => {\n    const [uploadedFile] = files;\n    setFile(uploadedFile);\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewSrc(fileReader.result);\n    };\n    fileReader.readAsDataURL(uploadedFile);\n    setIsPreviewAvailable(uploadedFile.name.match(/\\.(jpeg|jpg|png)$/));\n    dropRef.current.style.border = '2px dashed #e9ebeb';\n  };\n\n  const updateBorder = (dragState) => {\n    if (dragState === 'over') {\n      dropRef.current.style.border = '2px solid #000';\n    } else if (dragState === 'leave') {\n      dropRef.current.style.border = '2px dashed #e9ebeb';\n    }\n  };\n\n  const handleOnSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      setErrorMsg('');\n      await axios.post(`${API_URL}/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data' \n        }\n      });\n      props.history.push('/list');\n    } else {\n      setErrorMsg(\"S'il vous plaÃ®t, ajoutez votre image\");\n    }\n    } catch (error) {\n      error.response && setErrorMsg(error.response.data);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Form className=\"search-form\" onSubmit={handleOnSubmit}>\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\n        <Row>\n          <Col>\n            Placez votre image ci-dessous !\n          </Col>\n        </Row>\n        <div className=\"upload-section\">\n          <Dropzone \n          onDrop={onDrop}\n          onDragEnter={() => updateBorder('over')}\n          onDragLeave={() => updateBorder('leave')}\n          >\n            {({ getRootProps, getInputProps }) => (\n            <div {...getRootProps({ className: 'drop-zone' })} ref={dropRef}>\n              <input {...getInputProps()} />\n              <p>Glissez votre image ici ou cliquez ici pour la sÃ©lectionner</p>\n              {file && (\n              <div>\n                <strong>Image sÃ©lectionnÃ©e:</strong> {file.name}\n              </div>\n              )}\n            </div>\n            )}\n          </Dropzone>\n          {previewSrc ? (\n          isPreviewAvailable ? (\n          <div className=\"image-preview\">\n            <img className=\"preview-image\" src={previewSrc} alt=\"Preview\" />\n          </div>\n    ) : (\n      <div className=\"preview-message\">\n        <p>L'aperÃ§u de votre image est indisponible</p>\n      </div>\n    )\n  ) : (\n  <div className=\"preview-message\">\n    <p>L'aperÃ§u de votre image s'affichera ici aprÃ¨s votre sÃ©lection</p>\n  </div>\n  )}\n  </div>\n        <Button variant=\"primary\" type=\"submit\">\n          Envoyer\n        </Button>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}